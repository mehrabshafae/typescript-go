// Code generated by "stringer -type=Kind -output=kind_stringer_generated.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[KindUnknown-0]
	_ = x[KindEndOfFile-1]
	_ = x[KindSingleLineCommentTrivia-2]
	_ = x[KindMultiLineCommentTrivia-3]
	_ = x[KindNewLineTrivia-4]
	_ = x[KindWhitespaceTrivia-5]
	_ = x[KindShebangTrivia-6]
	_ = x[KindConflictMarkerTrivia-7]
	_ = x[KindNonTextFileMarkerTrivia-8]
	_ = x[KindNumericLiteral-9]
	_ = x[KindBigIntLiteral-10]
	_ = x[KindStringLiteral-11]
	_ = x[KindJsxText-12]
	_ = x[KindJsxTextAllWhiteSpaces-13]
	_ = x[KindRegularExpressionLiteral-14]
	_ = x[KindNoSubstitutionTemplateLiteral-15]
	_ = x[KindTemplateHead-16]
	_ = x[KindTemplateMiddle-17]
	_ = x[KindTemplateTail-18]
	_ = x[KindOpenBraceToken-19]
	_ = x[KindCloseBraceToken-20]
	_ = x[KindOpenParenToken-21]
	_ = x[KindCloseParenToken-22]
	_ = x[KindOpenBracketToken-23]
	_ = x[KindCloseBracketToken-24]
	_ = x[KindDotToken-25]
	_ = x[KindDotDotDotToken-26]
	_ = x[KindSemicolonToken-27]
	_ = x[KindCommaToken-28]
	_ = x[KindQuestionDotToken-29]
	_ = x[KindLessThanToken-30]
	_ = x[KindLessThanSlashToken-31]
	_ = x[KindGreaterThanToken-32]
	_ = x[KindLessThanEqualsToken-33]
	_ = x[KindGreaterThanEqualsToken-34]
	_ = x[KindEqualsEqualsToken-35]
	_ = x[KindExclamationEqualsToken-36]
	_ = x[KindEqualsEqualsEqualsToken-37]
	_ = x[KindExclamationEqualsEqualsToken-38]
	_ = x[KindEqualsGreaterThanToken-39]
	_ = x[KindPlusToken-40]
	_ = x[KindMinusToken-41]
	_ = x[KindAsteriskToken-42]
	_ = x[KindAsteriskAsteriskToken-43]
	_ = x[KindSlashToken-44]
	_ = x[KindPercentToken-45]
	_ = x[KindPlusPlusToken-46]
	_ = x[KindMinusMinusToken-47]
	_ = x[KindLessThanLessThanToken-48]
	_ = x[KindGreaterThanGreaterThanToken-49]
	_ = x[KindGreaterThanGreaterThanGreaterThanToken-50]
	_ = x[KindAmpersandToken-51]
	_ = x[KindBarToken-52]
	_ = x[KindCaretToken-53]
	_ = x[KindExclamationToken-54]
	_ = x[KindTildeToken-55]
	_ = x[KindAmpersandAmpersandToken-56]
	_ = x[KindBarBarToken-57]
	_ = x[KindQuestionToken-58]
	_ = x[KindColonToken-59]
	_ = x[KindAtToken-60]
	_ = x[KindQuestionQuestionToken-61]
	_ = x[KindBacktickToken-62]
	_ = x[KindHashToken-63]
	_ = x[KindEqualsToken-64]
	_ = x[KindPlusEqualsToken-65]
	_ = x[KindMinusEqualsToken-66]
	_ = x[KindAsteriskEqualsToken-67]
	_ = x[KindAsteriskAsteriskEqualsToken-68]
	_ = x[KindSlashEqualsToken-69]
	_ = x[KindPercentEqualsToken-70]
	_ = x[KindLessThanLessThanEqualsToken-71]
	_ = x[KindGreaterThanGreaterThanEqualsToken-72]
	_ = x[KindGreaterThanGreaterThanGreaterThanEqualsToken-73]
	_ = x[KindAmpersandEqualsToken-74]
	_ = x[KindBarEqualsToken-75]
	_ = x[KindBarBarEqualsToken-76]
	_ = x[KindAmpersandAmpersandEqualsToken-77]
	_ = x[KindQuestionQuestionEqualsToken-78]
	_ = x[KindCaretEqualsToken-79]
	_ = x[KindIdentifier-80]
	_ = x[KindPrivateIdentifier-81]
	_ = x[KindJSDocCommentTextToken-82]
	_ = x[KindBreakKeyword-83]
	_ = x[KindCaseKeyword-84]
	_ = x[KindCatchKeyword-85]
	_ = x[KindClassKeyword-86]
	_ = x[KindConstKeyword-87]
	_ = x[KindContinueKeyword-88]
	_ = x[KindDebuggerKeyword-89]
	_ = x[KindDefaultKeyword-90]
	_ = x[KindDeleteKeyword-91]
	_ = x[KindDoKeyword-92]
	_ = x[KindElseKeyword-93]
	_ = x[KindEnumKeyword-94]
	_ = x[KindExportKeyword-95]
	_ = x[KindExtendsKeyword-96]
	_ = x[KindFalseKeyword-97]
	_ = x[KindFinallyKeyword-98]
	_ = x[KindForKeyword-99]
	_ = x[KindFunctionKeyword-100]
	_ = x[KindIfKeyword-101]
	_ = x[KindImportKeyword-102]
	_ = x[KindInKeyword-103]
	_ = x[KindInstanceOfKeyword-104]
	_ = x[KindNewKeyword-105]
	_ = x[KindNullKeyword-106]
	_ = x[KindReturnKeyword-107]
	_ = x[KindSuperKeyword-108]
	_ = x[KindSwitchKeyword-109]
	_ = x[KindThisKeyword-110]
	_ = x[KindThrowKeyword-111]
	_ = x[KindTrueKeyword-112]
	_ = x[KindTryKeyword-113]
	_ = x[KindTypeOfKeyword-114]
	_ = x[KindVarKeyword-115]
	_ = x[KindVoidKeyword-116]
	_ = x[KindWhileKeyword-117]
	_ = x[KindWithKeyword-118]
	_ = x[KindImplementsKeyword-119]
	_ = x[KindInterfaceKeyword-120]
	_ = x[KindLetKeyword-121]
	_ = x[KindPackageKeyword-122]
	_ = x[KindPrivateKeyword-123]
	_ = x[KindProtectedKeyword-124]
	_ = x[KindPublicKeyword-125]
	_ = x[KindStaticKeyword-126]
	_ = x[KindYieldKeyword-127]
	_ = x[KindAbstractKeyword-128]
	_ = x[KindAccessorKeyword-129]
	_ = x[KindAsKeyword-130]
	_ = x[KindAssertsKeyword-131]
	_ = x[KindAssertKeyword-132]
	_ = x[KindAnyKeyword-133]
	_ = x[KindAsyncKeyword-134]
	_ = x[KindAwaitKeyword-135]
	_ = x[KindBooleanKeyword-136]
	_ = x[KindConstructorKeyword-137]
	_ = x[KindDeclareKeyword-138]
	_ = x[KindGetKeyword-139]
	_ = x[KindImmediateKeyword-140]
	_ = x[KindInferKeyword-141]
	_ = x[KindIntrinsicKeyword-142]
	_ = x[KindIsKeyword-143]
	_ = x[KindKeyOfKeyword-144]
	_ = x[KindModuleKeyword-145]
	_ = x[KindNamespaceKeyword-146]
	_ = x[KindNeverKeyword-147]
	_ = x[KindOutKeyword-148]
	_ = x[KindReadonlyKeyword-149]
	_ = x[KindRequireKeyword-150]
	_ = x[KindNumberKeyword-151]
	_ = x[KindObjectKeyword-152]
	_ = x[KindSatisfiesKeyword-153]
	_ = x[KindSetKeyword-154]
	_ = x[KindStringKeyword-155]
	_ = x[KindSymbolKeyword-156]
	_ = x[KindTypeKeyword-157]
	_ = x[KindUndefinedKeyword-158]
	_ = x[KindUniqueKeyword-159]
	_ = x[KindUnknownKeyword-160]
	_ = x[KindUsingKeyword-161]
	_ = x[KindFromKeyword-162]
	_ = x[KindGlobalKeyword-163]
	_ = x[KindBigIntKeyword-164]
	_ = x[KindOverrideKeyword-165]
	_ = x[KindOfKeyword-166]
	_ = x[KindQualifiedName-167]
	_ = x[KindComputedPropertyName-168]
	_ = x[KindTypeParameter-169]
	_ = x[KindParameter-170]
	_ = x[KindDecorator-171]
	_ = x[KindPropertySignature-172]
	_ = x[KindPropertyDeclaration-173]
	_ = x[KindMethodSignature-174]
	_ = x[KindMethodDeclaration-175]
	_ = x[KindClassStaticBlockDeclaration-176]
	_ = x[KindConstructor-177]
	_ = x[KindGetAccessor-178]
	_ = x[KindSetAccessor-179]
	_ = x[KindCallSignature-180]
	_ = x[KindConstructSignature-181]
	_ = x[KindIndexSignature-182]
	_ = x[KindTypePredicate-183]
	_ = x[KindTypeReference-184]
	_ = x[KindFunctionType-185]
	_ = x[KindConstructorType-186]
	_ = x[KindTypeQuery-187]
	_ = x[KindTypeLiteral-188]
	_ = x[KindArrayType-189]
	_ = x[KindTupleType-190]
	_ = x[KindOptionalType-191]
	_ = x[KindRestType-192]
	_ = x[KindUnionType-193]
	_ = x[KindIntersectionType-194]
	_ = x[KindConditionalType-195]
	_ = x[KindInferType-196]
	_ = x[KindParenthesizedType-197]
	_ = x[KindThisType-198]
	_ = x[KindTypeOperator-199]
	_ = x[KindIndexedAccessType-200]
	_ = x[KindMappedType-201]
	_ = x[KindLiteralType-202]
	_ = x[KindNamedTupleMember-203]
	_ = x[KindTemplateLiteralType-204]
	_ = x[KindTemplateLiteralTypeSpan-205]
	_ = x[KindImportType-206]
	_ = x[KindObjectBindingPattern-207]
	_ = x[KindArrayBindingPattern-208]
	_ = x[KindBindingElement-209]
	_ = x[KindArrayLiteralExpression-210]
	_ = x[KindObjectLiteralExpression-211]
	_ = x[KindPropertyAccessExpression-212]
	_ = x[KindElementAccessExpression-213]
	_ = x[KindCallExpression-214]
	_ = x[KindNewExpression-215]
	_ = x[KindTaggedTemplateExpression-216]
	_ = x[KindTypeAssertionExpression-217]
	_ = x[KindParenthesizedExpression-218]
	_ = x[KindFunctionExpression-219]
	_ = x[KindArrowFunction-220]
	_ = x[KindDeleteExpression-221]
	_ = x[KindTypeOfExpression-222]
	_ = x[KindVoidExpression-223]
	_ = x[KindAwaitExpression-224]
	_ = x[KindPrefixUnaryExpression-225]
	_ = x[KindPostfixUnaryExpression-226]
	_ = x[KindBinaryExpression-227]
	_ = x[KindConditionalExpression-228]
	_ = x[KindTemplateExpression-229]
	_ = x[KindYieldExpression-230]
	_ = x[KindSpreadElement-231]
	_ = x[KindClassExpression-232]
	_ = x[KindOmittedExpression-233]
	_ = x[KindExpressionWithTypeArguments-234]
	_ = x[KindAsExpression-235]
	_ = x[KindNonNullExpression-236]
	_ = x[KindMetaProperty-237]
	_ = x[KindSyntheticExpression-238]
	_ = x[KindSatisfiesExpression-239]
	_ = x[KindTemplateSpan-240]
	_ = x[KindSemicolonClassElement-241]
	_ = x[KindBlock-242]
	_ = x[KindEmptyStatement-243]
	_ = x[KindVariableStatement-244]
	_ = x[KindExpressionStatement-245]
	_ = x[KindIfStatement-246]
	_ = x[KindDoStatement-247]
	_ = x[KindWhileStatement-248]
	_ = x[KindForStatement-249]
	_ = x[KindForInStatement-250]
	_ = x[KindForOfStatement-251]
	_ = x[KindContinueStatement-252]
	_ = x[KindBreakStatement-253]
	_ = x[KindReturnStatement-254]
	_ = x[KindWithStatement-255]
	_ = x[KindSwitchStatement-256]
	_ = x[KindLabeledStatement-257]
	_ = x[KindThrowStatement-258]
	_ = x[KindTryStatement-259]
	_ = x[KindDebuggerStatement-260]
	_ = x[KindVariableDeclaration-261]
	_ = x[KindVariableDeclarationList-262]
	_ = x[KindFunctionDeclaration-263]
	_ = x[KindClassDeclaration-264]
	_ = x[KindInterfaceDeclaration-265]
	_ = x[KindTypeAliasDeclaration-266]
	_ = x[KindEnumDeclaration-267]
	_ = x[KindModuleDeclaration-268]
	_ = x[KindModuleBlock-269]
	_ = x[KindCaseBlock-270]
	_ = x[KindNamespaceExportDeclaration-271]
	_ = x[KindImportEqualsDeclaration-272]
	_ = x[KindImportDeclaration-273]
	_ = x[KindImportClause-274]
	_ = x[KindNamespaceImport-275]
	_ = x[KindNamedImports-276]
	_ = x[KindImportSpecifier-277]
	_ = x[KindExportAssignment-278]
	_ = x[KindExportDeclaration-279]
	_ = x[KindNamedExports-280]
	_ = x[KindNamespaceExport-281]
	_ = x[KindExportSpecifier-282]
	_ = x[KindMissingDeclaration-283]
	_ = x[KindExternalModuleReference-284]
	_ = x[KindJsxElement-285]
	_ = x[KindJsxSelfClosingElement-286]
	_ = x[KindJsxOpeningElement-287]
	_ = x[KindJsxClosingElement-288]
	_ = x[KindJsxFragment-289]
	_ = x[KindJsxOpeningFragment-290]
	_ = x[KindJsxClosingFragment-291]
	_ = x[KindJsxAttribute-292]
	_ = x[KindJsxAttributes-293]
	_ = x[KindJsxSpreadAttribute-294]
	_ = x[KindJsxExpression-295]
	_ = x[KindJsxNamespacedName-296]
	_ = x[KindCaseClause-297]
	_ = x[KindDefaultClause-298]
	_ = x[KindHeritageClause-299]
	_ = x[KindCatchClause-300]
	_ = x[KindImportAttributes-301]
	_ = x[KindImportAttribute-302]
	_ = x[KindPropertyAssignment-303]
	_ = x[KindShorthandPropertyAssignment-304]
	_ = x[KindSpreadAssignment-305]
	_ = x[KindEnumMember-306]
	_ = x[KindSourceFile-307]
	_ = x[KindBundle-308]
	_ = x[KindJSDocTypeExpression-309]
	_ = x[KindJSDocNameReference-310]
	_ = x[KindJSDocMemberName-311]
	_ = x[KindJSDocAllType-312]
	_ = x[KindJSDocNullableType-313]
	_ = x[KindJSDocNonNullableType-314]
	_ = x[KindJSDocOptionalType-315]
	_ = x[KindJSDocVariadicType-316]
	_ = x[KindJSDoc-317]
	_ = x[KindJSDocText-318]
	_ = x[KindJSDocTypeLiteral-319]
	_ = x[KindJSDocSignature-320]
	_ = x[KindJSDocLink-321]
	_ = x[KindJSDocLinkCode-322]
	_ = x[KindJSDocLinkPlain-323]
	_ = x[KindJSDocTag-324]
	_ = x[KindJSDocAugmentsTag-325]
	_ = x[KindJSDocImplementsTag-326]
	_ = x[KindJSDocDeprecatedTag-327]
	_ = x[KindJSDocPublicTag-328]
	_ = x[KindJSDocPrivateTag-329]
	_ = x[KindJSDocProtectedTag-330]
	_ = x[KindJSDocReadonlyTag-331]
	_ = x[KindJSDocOverrideTag-332]
	_ = x[KindJSDocCallbackTag-333]
	_ = x[KindJSDocOverloadTag-334]
	_ = x[KindJSDocParameterTag-335]
	_ = x[KindJSDocReturnTag-336]
	_ = x[KindJSDocThisTag-337]
	_ = x[KindJSDocTypeTag-338]
	_ = x[KindJSDocTemplateTag-339]
	_ = x[KindJSDocTypedefTag-340]
	_ = x[KindJSDocSeeTag-341]
	_ = x[KindJSDocPropertyTag-342]
	_ = x[KindJSDocSatisfiesTag-343]
	_ = x[KindJSDocImportTag-344]
	_ = x[KindSyntaxList-345]
	_ = x[KindNotEmittedStatement-346]
	_ = x[KindPartiallyEmittedExpression-347]
	_ = x[KindCommaListExpression-348]
	_ = x[KindSyntheticReferenceExpression-349]
	_ = x[KindCount-350]
}

const _Kind_name = "KindUnknownKindEndOfFileKindSingleLineCommentTriviaKindMultiLineCommentTriviaKindNewLineTriviaKindWhitespaceTriviaKindShebangTriviaKindConflictMarkerTriviaKindNonTextFileMarkerTriviaKindNumericLiteralKindBigIntLiteralKindStringLiteralKindJsxTextKindJsxTextAllWhiteSpacesKindRegularExpressionLiteralKindNoSubstitutionTemplateLiteralKindTemplateHeadKindTemplateMiddleKindTemplateTailKindOpenBraceTokenKindCloseBraceTokenKindOpenParenTokenKindCloseParenTokenKindOpenBracketTokenKindCloseBracketTokenKindDotTokenKindDotDotDotTokenKindSemicolonTokenKindCommaTokenKindQuestionDotTokenKindLessThanTokenKindLessThanSlashTokenKindGreaterThanTokenKindLessThanEqualsTokenKindGreaterThanEqualsTokenKindEqualsEqualsTokenKindExclamationEqualsTokenKindEqualsEqualsEqualsTokenKindExclamationEqualsEqualsTokenKindEqualsGreaterThanTokenKindPlusTokenKindMinusTokenKindAsteriskTokenKindAsteriskAsteriskTokenKindSlashTokenKindPercentTokenKindPlusPlusTokenKindMinusMinusTokenKindLessThanLessThanTokenKindGreaterThanGreaterThanTokenKindGreaterThanGreaterThanGreaterThanTokenKindAmpersandTokenKindBarTokenKindCaretTokenKindExclamationTokenKindTildeTokenKindAmpersandAmpersandTokenKindBarBarTokenKindQuestionTokenKindColonTokenKindAtTokenKindQuestionQuestionTokenKindBacktickTokenKindHashTokenKindEqualsTokenKindPlusEqualsTokenKindMinusEqualsTokenKindAsteriskEqualsTokenKindAsteriskAsteriskEqualsTokenKindSlashEqualsTokenKindPercentEqualsTokenKindLessThanLessThanEqualsTokenKindGreaterThanGreaterThanEqualsTokenKindGreaterThanGreaterThanGreaterThanEqualsTokenKindAmpersandEqualsTokenKindBarEqualsTokenKindBarBarEqualsTokenKindAmpersandAmpersandEqualsTokenKindQuestionQuestionEqualsTokenKindCaretEqualsTokenKindIdentifierKindPrivateIdentifierKindJSDocCommentTextTokenKindBreakKeywordKindCaseKeywordKindCatchKeywordKindClassKeywordKindConstKeywordKindContinueKeywordKindDebuggerKeywordKindDefaultKeywordKindDeleteKeywordKindDoKeywordKindElseKeywordKindEnumKeywordKindExportKeywordKindExtendsKeywordKindFalseKeywordKindFinallyKeywordKindForKeywordKindFunctionKeywordKindIfKeywordKindImportKeywordKindInKeywordKindInstanceOfKeywordKindNewKeywordKindNullKeywordKindReturnKeywordKindSuperKeywordKindSwitchKeywordKindThisKeywordKindThrowKeywordKindTrueKeywordKindTryKeywordKindTypeOfKeywordKindVarKeywordKindVoidKeywordKindWhileKeywordKindWithKeywordKindImplementsKeywordKindInterfaceKeywordKindLetKeywordKindPackageKeywordKindPrivateKeywordKindProtectedKeywordKindPublicKeywordKindStaticKeywordKindYieldKeywordKindAbstractKeywordKindAccessorKeywordKindAsKeywordKindAssertsKeywordKindAssertKeywordKindAnyKeywordKindAsyncKeywordKindAwaitKeywordKindBooleanKeywordKindConstructorKeywordKindDeclareKeywordKindGetKeywordKindImmediateKeywordKindInferKeywordKindIntrinsicKeywordKindIsKeywordKindKeyOfKeywordKindModuleKeywordKindNamespaceKeywordKindNeverKeywordKindOutKeywordKindReadonlyKeywordKindRequireKeywordKindNumberKeywordKindObjectKeywordKindSatisfiesKeywordKindSetKeywordKindStringKeywordKindSymbolKeywordKindTypeKeywordKindUndefinedKeywordKindUniqueKeywordKindUnknownKeywordKindUsingKeywordKindFromKeywordKindGlobalKeywordKindBigIntKeywordKindOverrideKeywordKindOfKeywordKindQualifiedNameKindComputedPropertyNameKindTypeParameterKindParameterKindDecoratorKindPropertySignatureKindPropertyDeclarationKindMethodSignatureKindMethodDeclarationKindClassStaticBlockDeclarationKindConstructorKindGetAccessorKindSetAccessorKindCallSignatureKindConstructSignatureKindIndexSignatureKindTypePredicateKindTypeReferenceKindFunctionTypeKindConstructorTypeKindTypeQueryKindTypeLiteralKindArrayTypeKindTupleTypeKindOptionalTypeKindRestTypeKindUnionTypeKindIntersectionTypeKindConditionalTypeKindInferTypeKindParenthesizedTypeKindThisTypeKindTypeOperatorKindIndexedAccessTypeKindMappedTypeKindLiteralTypeKindNamedTupleMemberKindTemplateLiteralTypeKindTemplateLiteralTypeSpanKindImportTypeKindObjectBindingPatternKindArrayBindingPatternKindBindingElementKindArrayLiteralExpressionKindObjectLiteralExpressionKindPropertyAccessExpressionKindElementAccessExpressionKindCallExpressionKindNewExpressionKindTaggedTemplateExpressionKindTypeAssertionExpressionKindParenthesizedExpressionKindFunctionExpressionKindArrowFunctionKindDeleteExpressionKindTypeOfExpressionKindVoidExpressionKindAwaitExpressionKindPrefixUnaryExpressionKindPostfixUnaryExpressionKindBinaryExpressionKindConditionalExpressionKindTemplateExpressionKindYieldExpressionKindSpreadElementKindClassExpressionKindOmittedExpressionKindExpressionWithTypeArgumentsKindAsExpressionKindNonNullExpressionKindMetaPropertyKindSyntheticExpressionKindSatisfiesExpressionKindTemplateSpanKindSemicolonClassElementKindBlockKindEmptyStatementKindVariableStatementKindExpressionStatementKindIfStatementKindDoStatementKindWhileStatementKindForStatementKindForInStatementKindForOfStatementKindContinueStatementKindBreakStatementKindReturnStatementKindWithStatementKindSwitchStatementKindLabeledStatementKindThrowStatementKindTryStatementKindDebuggerStatementKindVariableDeclarationKindVariableDeclarationListKindFunctionDeclarationKindClassDeclarationKindInterfaceDeclarationKindTypeAliasDeclarationKindEnumDeclarationKindModuleDeclarationKindModuleBlockKindCaseBlockKindNamespaceExportDeclarationKindImportEqualsDeclarationKindImportDeclarationKindImportClauseKindNamespaceImportKindNamedImportsKindImportSpecifierKindExportAssignmentKindExportDeclarationKindNamedExportsKindNamespaceExportKindExportSpecifierKindMissingDeclarationKindExternalModuleReferenceKindJsxElementKindJsxSelfClosingElementKindJsxOpeningElementKindJsxClosingElementKindJsxFragmentKindJsxOpeningFragmentKindJsxClosingFragmentKindJsxAttributeKindJsxAttributesKindJsxSpreadAttributeKindJsxExpressionKindJsxNamespacedNameKindCaseClauseKindDefaultClauseKindHeritageClauseKindCatchClauseKindImportAttributesKindImportAttributeKindPropertyAssignmentKindShorthandPropertyAssignmentKindSpreadAssignmentKindEnumMemberKindSourceFileKindBundleKindJSDocTypeExpressionKindJSDocNameReferenceKindJSDocMemberNameKindJSDocAllTypeKindJSDocNullableTypeKindJSDocNonNullableTypeKindJSDocOptionalTypeKindJSDocVariadicTypeKindJSDocKindJSDocTextKindJSDocTypeLiteralKindJSDocSignatureKindJSDocLinkKindJSDocLinkCodeKindJSDocLinkPlainKindJSDocTagKindJSDocAugmentsTagKindJSDocImplementsTagKindJSDocDeprecatedTagKindJSDocPublicTagKindJSDocPrivateTagKindJSDocProtectedTagKindJSDocReadonlyTagKindJSDocOverrideTagKindJSDocCallbackTagKindJSDocOverloadTagKindJSDocParameterTagKindJSDocReturnTagKindJSDocThisTagKindJSDocTypeTagKindJSDocTemplateTagKindJSDocTypedefTagKindJSDocSeeTagKindJSDocPropertyTagKindJSDocSatisfiesTagKindJSDocImportTagKindSyntaxListKindNotEmittedStatementKindPartiallyEmittedExpressionKindCommaListExpressionKindSyntheticReferenceExpressionKindCount"

var _Kind_index = [...]uint16{0, 11, 24, 51, 77, 94, 114, 131, 155, 182, 200, 217, 234, 245, 270, 298, 331, 347, 365, 381, 399, 418, 436, 455, 475, 496, 508, 526, 544, 558, 578, 595, 617, 637, 660, 686, 707, 733, 760, 792, 818, 831, 845, 862, 887, 901, 917, 934, 953, 978, 1009, 1051, 1069, 1081, 1095, 1115, 1129, 1156, 1171, 1188, 1202, 1213, 1238, 1255, 1268, 1283, 1302, 1322, 1345, 1376, 1396, 1418, 1449, 1486, 1534, 1558, 1576, 1597, 1630, 1661, 1681, 1695, 1716, 1741, 1757, 1772, 1788, 1804, 1820, 1839, 1858, 1876, 1893, 1906, 1921, 1936, 1953, 1971, 1987, 2005, 2019, 2038, 2051, 2068, 2081, 2102, 2116, 2131, 2148, 2164, 2181, 2196, 2212, 2227, 2241, 2258, 2272, 2287, 2303, 2318, 2339, 2359, 2373, 2391, 2409, 2429, 2446, 2463, 2479, 2498, 2517, 2530, 2548, 2565, 2579, 2595, 2611, 2629, 2651, 2669, 2683, 2703, 2719, 2739, 2752, 2768, 2785, 2805, 2821, 2835, 2854, 2872, 2889, 2906, 2926, 2940, 2957, 2974, 2989, 3009, 3026, 3044, 3060, 3075, 3092, 3109, 3128, 3141, 3158, 3182, 3199, 3212, 3225, 3246, 3269, 3288, 3309, 3340, 3355, 3370, 3385, 3402, 3424, 3442, 3459, 3476, 3492, 3511, 3524, 3539, 3552, 3565, 3581, 3593, 3606, 3626, 3645, 3658, 3679, 3691, 3707, 3728, 3742, 3757, 3777, 3800, 3827, 3841, 3865, 3888, 3906, 3932, 3959, 3987, 4014, 4032, 4049, 4077, 4104, 4131, 4153, 4170, 4190, 4210, 4228, 4247, 4272, 4298, 4318, 4343, 4365, 4384, 4401, 4420, 4441, 4472, 4488, 4509, 4525, 4548, 4571, 4587, 4612, 4621, 4639, 4660, 4683, 4698, 4713, 4731, 4747, 4765, 4783, 4804, 4822, 4841, 4858, 4877, 4897, 4915, 4931, 4952, 4975, 5002, 5025, 5045, 5069, 5093, 5112, 5133, 5148, 5161, 5191, 5218, 5239, 5255, 5274, 5290, 5309, 5329, 5350, 5366, 5385, 5404, 5426, 5453, 5467, 5492, 5513, 5534, 5549, 5571, 5593, 5609, 5626, 5648, 5665, 5686, 5700, 5717, 5735, 5750, 5770, 5789, 5811, 5842, 5862, 5876, 5890, 5900, 5923, 5945, 5964, 5980, 6001, 6025, 6046, 6067, 6076, 6089, 6109, 6127, 6140, 6157, 6175, 6187, 6207, 6229, 6251, 6269, 6288, 6309, 6329, 6349, 6369, 6389, 6410, 6428, 6444, 6460, 6480, 6499, 6514, 6534, 6555, 6573, 6587, 6610, 6640, 6663, 6695, 6704}

func (i Kind) String() string {
	if i < 0 || i >= Kind(len(_Kind_index)-1) {
		return "Kind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Kind_name[_Kind_index[i]:_Kind_index[i+1]]
}
